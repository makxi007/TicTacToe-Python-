openapi: 3.0.0
info:
  title: Тестовое задание
  version: '1.0'
  description: |-
    Приложение для вычисления и хранения хэшей файлов.
    Код пользователя передается в заголовке `X-Auth-User`.
    Файлы загружаются, сохраняется код пользователя, имя файла и его SHA256 и MD5 хэши.
    Выбор базы данных значения не имеет.
servers:
  - url: 'http://localhost:3000' 
    description: Сервер должен быть запущен на 3000 порту.
paths:
  '/file_hashes/{hash}':
    get:
      summary: Получение имени файла по хэшу
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: Найденные файлы с данным хэшем.
                items:
                  $ref: '#/components/schemas/FileHash'
        '404':
          description: Файлы с данным хэшем не найдены.
      operationId: get-file_hashes
    parameters:
      - schema:
          type: string
        name: hash
        in: path
        required: true
        description: Хэш файла (sha256 или md5).
    delete:
      summary: Удаление хэшей файлов.
      operationId: delete-file_hashes-hash
      responses:
        '200':
          description: OK
        '401':
          description: |-
            Не авторизован.
            Если не указан заголовок `X-Auth-User`.
        '404':
          description: Если не найдено ни одного файла с заданным хэшем.
      parameters: []
      security:
        - X-Auth-User: []
      description: Должно удалять только хэши текущего пользователя (`X-Auth-User`).
  /file_hashes:
    post:
      summary: Добавление хэша файла.
      description: |
        Файл загружается через поле `file` в `multipart/form-data` запросе.
        Если у пользователя уже есть файл с такими именем и хэшами, его не нужно добавлять второй раз, но ответ должен быть успешным.
      operationId: post-file_hashes
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileHash'
        '401':
          description: |-
            Не авторизован.
            Если отсутствует заголовок `X-Auth-User`.
      security:
        - X-Auth-User: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Загружаемый файл.
components:
  schemas:
    FileHash:
      title: FileHash
      type: object
      description: Хэши файла.
      properties:
        userId:
          type: string
          description: 'Код пользователя, добавившего файл.'
        filename:
          type: string
          description: Имя файла.
        sha256:
          type: string
          description: Хэш SHA256.
        md5:
          type: string
          description: Хэш MD5.
  securitySchemes:
    X-Auth-User:
      name: user id
      type: apiKey
      in: query
      description: В заголовке `X-Auth-User` передается код пользователя.
